version: "3.9"

services:
  server:
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
    image: dogule-server-dev
    entrypoint: ["/usr/local/bin/dogule-entrypoint.sh"]
    command: ["npm", "run", "dev", "--workspace", "@dogule/server"]
    working_dir: /workspace
    environment:
      NODE_ENV: development
      PORT: 4000
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/dogule
    volumes:
      - .:/workspace
      - workspace_node_modules:/workspace/node_modules
      - server_app_node_modules:/workspace/apps/server/node_modules
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
    image: dogule-web-dev
    entrypoint: ["/usr/local/bin/dogule-entrypoint.sh"]
    command: ["npm", "run", "dev", "--workspace", "@dogule/web"]
    working_dir: /workspace
    environment:
      NODE_ENV: development
    volumes:
      - .:/workspace
      - workspace_node_modules:/workspace/node_modules
      - web_app_node_modules:/workspace/apps/web/node_modules
    ports:
      - "3000:3000"
    depends_on:
      server:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dogule
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "dogule"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  workspace_node_modules:
  server_app_node_modules:
  web_app_node_modules:
  postgres_data:
